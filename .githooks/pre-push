#!/usr/bin/env bash
set -euo pipefail

echo "üîç Running pre-push tests..."
echo "================================"

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# Function to cleanup on exit
cleanup() {
    echo -e "\n${YELLOW}Cleaning up...${NC}"
    # Kill any background processes started by this script
    pkill -f "integration-test.sh" 2>/dev/null || true
    pkill -f "start-all.sh" 2>/dev/null || true
}

# Set trap to cleanup on script exit
trap cleanup EXIT

# Check if services are already running
services_running=false
if curl -sSf http://localhost:3001/api/menu > /dev/null 2>&1 && \
   curl -sSf http://localhost:5173 > /dev/null 2>&1; then
    echo -e "${GREEN}‚úÖ Services already running${NC}"
    services_running=true
else
    echo -e "${YELLOW}‚ö†Ô∏è  Services not running, starting them...${NC}"
    
    # Start services in background
    bash scripts/start-all.sh > /tmp/start-all.log 2>&1 &
    start_pid=$!
    
    # Wait for services to be ready (max 60 seconds)
    echo "Waiting for services to start..."
    for i in {1..60}; do
        if curl -sSf http://localhost:3001/api/menu > /dev/null 2>&1 && \
           curl -sSf http://localhost:5173 > /dev/null 2>&1; then
            echo -e "${GREEN}‚úÖ Services started successfully${NC}"
            services_running=true
            break
        fi
        echo -n "."
        sleep 1
    done
    
    if [ "$services_running" = false ]; then
        echo -e "\n${RED}‚ùå Failed to start services within 60 seconds${NC}"
        echo "Check the logs in /tmp/start-all.log"
        exit 1
    fi
fi

echo ""
echo "üß™ Running integration tests..."
echo "================================"

# Run the fixed tests
cd "$(git rev-parse --show-toplevel)"
if bash scripts/run-fixed-tests.sh; then
    echo ""
    echo -e "${GREEN}‚úÖ All tests passed! Push allowed.${NC}"
    echo "================================"
    exit 0
else
    echo ""
    echo -e "${RED}‚ùå Tests failed! Push blocked.${NC}"
    echo "================================"
    echo -e "${YELLOW}Fix the failing tests before pushing.${NC}"
    echo "Run 'bash scripts/run-fixed-tests.sh' to see detailed errors."
    exit 1
fi